using System.Threading.Tasks;
using ErgoNodeSharp.Data;
using ErgoNodeSharp.Models.Responses;
using ErgoNodeSpyder.Portal.Models.Geo;
using Microsoft.AspNetCore.Mvc;

namespace ErgoNodeSpyder.Portal.Controllers
{
    [Route("geo")]
    public class GeoController : Controller
    {

        private readonly INodeReportingRepository reportingRepository;

        public GeoController(INodeReportingRepository reportingRepository)
        {
            this.reportingRepository = reportingRepository;
        }


        [Route("")]
        public IActionResult Index()
        {
            return View();
        }

        [Route("country/{countryCode:length(2)}")]
        public async Task<IActionResult> Country(string countryCode)
        {
            CountryViewModel model = new CountryViewModel();

            string countyName = await reportingRepository.GetCountryName(countryCode);

            if (string.IsNullOrEmpty(countyName))
            {
                ErrorMessage errorMessage = new ErrorMessage();
                errorMessage.Status = "404";
                errorMessage.Title = "Not found";
                errorMessage.Detail = "No data available for that country code";
                ErrorResponse errorResponse = new ErrorResponse(errorMessage);
                return NotFound(errorResponse);
            }

            model.CountryCode = countryCode;
            model.CountryName = countyName;
            model.MapName = GetMapCode(countryCode);
            return View(model);
        }

        private string GetMapCode(string code)
        {
            switch (code)
            {
                case "AL":
                    return "albaniaLow";
                case "DZ":
                    return "algeriaLow";
                case "AS":
                    return "americanSamoaLow";
                case "AD":
                    return "andorraLow";
                case "AF":
                    return "afghanistanLow";
                case "AO":
                    return "angolaLow";
                case "AI":
                    return "anguillaLow";
                case "AG":
                    return "antiguaBarbudaLow";
                case "AR":
                    return "argentinaLow";
                case "AM":
                    return "armeniaLow";
                case "AW":
                    return "arubaLow";
                case "AU":
                    return "australiaLow";
                case "AT":
                    return "austriaLow";
                case "AZ":
                    return "azerbaijanLow";
                case "BH":
                    return "bahrainLow";
                case "BD":
                    return "bangladeshLow";
                case "BB":
                    return "barbadosLow";
                case "BY":
                    return "belarusLow";
                case "BE":
                    return "belgiumLow";
                case "BZ":
                    return "belizeLow";
                case "BJ":
                    return "beninLow";
                case "BM":
                    return "bermudaLow";
                case "BT":
                    return "bhutanLow";
                case "BO":
                    return "boliviaLow";
                case "BQ":
                    return "bonaireSintEustatiusSabaLow";
                case "BA":
                    return "bosniaHerzegovinaLow";
                case "BW":
                    return "botswanaLow";
                case "BR":
                    return "brazilLow";
                case "IO":
                    return "britishIndianOceanTerritoryLow";
                case "VG":
                    return "britishVirginIslandsLow";
                case "BN":
                    return "bruneiDarussalamLow";
                case "BG":
                    return "bulgariaLow";
                case "BF":
                    return "burkinaFasoLow";
                case "BI":
                    return "burundiLow";
                case "BS":
                    return "bahamasLow";
                case "KH":
                    return "cambodiaLow";
                case "CM":
                    return "cameroonLow";
                case "CA":
                    return "canadaLow";
                case "KY":
                    return "caymanIslandsLow";
                case "CV":
                    return "capeVerdeLow";
                case "CF":
                    return "centralAfricanRepublicLow";
                case "TD":
                    return "chadLow";
                case "GB-CHA":
                    return "channelIslandsLow";
                case "CL":
                    return "chileLow";
                case "CN":
                    return "chinaLow";
                case "CC":
                    return "cocosKeelingLow";
                case "CO":
                    return "colombiaLow";
                case "KM":
                    return "comorosLow";
                case "CD":
                    return "congoDRLow";
                case "CG":
                    return "congoLow";
                case "CR":
                    return "costaRicaLow";
                case "CI":
                    return "cotedIvoireLow";
                case "HR":
                    return "croatiaLow";
                case "CW":
                    return "curacaoLow";
                case "CU":
                    return "cubaLow";
                case "CY":
                    return "cyprusLow";
                case "CZ":
                    return "czechiaLow";
                case "DK":
                    return "denmarkLow";
                case "DJ":
                    return "djiboutiLow";
                case "DM":
                    return "dominicaLow";
                case "DO":
                    return "dominicanRepublicLow";
                case "EC":
                    return "ecuadorLow";
                case "EG":
                    return "egyptLow";
                case "SV":
                    return "elSalvadorLow";
                case "GQ":
                    return "equatorialGuineaLow";
                case "ER":
                    return "eritreaLow";
                case "EE":
                    return "estoniaLow";
                case "SZ":
                    return "eswatiniLow";
                case "ET":
                    return "ethiopiaLow";
                case "FK":
                    return "falklandIslandsLow";
                case "FO":
                    return "faroeIslandsLow";
                case "FJ":
                    return "fijiEastLow";
                case "FI":
                    return "finlandLow";
                case "FR":
                    return "franceLow";
                case "GF":
                    return "frenchGuianaLow";
                case "GA":
                    return "gabonLow";
                case "GD":
                    return "grenadaLow";
                case "GE":
                    return "georgiaLow";
                case "DE":
                    return "germanyLow";
                case "GR":
                    return "greeceLow";
                case "GL":
                    return "greenlandLow";
                case "GM":
                    return "gambiaLow";
                case "GH":
                    return "ghanaLow";
                case "GN":
                    return "guineaLow";
                case "GP":
                    return "guadeloupeLow";
                case "GU":
                    return "guamLow";
                case "GT":
                    return "guatemalaLow";
                case "GW":
                    return "guineaBissauLow";
                case "GY":
                    return "guyanaLow";
                case "HN":
                    return "hondurasLow";
                case "HK":
                    return "hongKongLow";
                case "HT":
                    return "haitiLow";
                case "HU":
                    return "hungaryLow";
                case "IS":
                    return "icelandLow";
                case "IN":
                    return "india2020Low";
                case "ID":
                    return "indonesiaLow";
                case "IE":
                    return "irelandLow";
                case "IL":
                    return "israelLow";
                case "IT":
                    return "italyLow";
                case "JE":
                    return "channelIslandsLow";
                case "IQ":
                    return "iraqLow";
                case "IR":
                    return "iranLow";
                case "JM":
                    return "jamaicaLow";
                case "JO":
                    return "jordanLow";
                case "JP":
                    return "japanLow";
                case "KZ":
                    return "kazakhstanLow";
                case "KE":
                    return "kenyaLow";
                case "XK":
                    return "kosovoLow";
                case "KW":
                    return "kuwaitLow";
                case "KG":
                    return "kyrgyzstanLow";
                case "LA":
                    return "laosLow";
                case "LB":
                    return "lebanonLow";
                case "LV":
                    return "latviaLow";
                case "LI":
                    return "liechtensteinLow";
                case "LT":
                    return "lithuaniaLow";
                case "LU":
                    return "luxembourgLow";
                case "LY":
                    return "libyaLow";
                case "MG":
                    return "madagascarProvinceLow";
                case "MY":
                    return "malaysiaLow";
                case "MR":
                    return "mauritaniaLow";
                case "MV":
                    return "maldivesLow";
                case "MW":
                    return "malawiLow";
                case "ML":
                    return "maliLow";
                case "MT":
                    return "maltaLow";
                case "MX":
                    return "mexicoLow";
                case "MD":
                    return "moldovaLow";
                case "MN":
                    return "mongoliaLow";
                case "MA":
                    return "moroccoLow";
                case "ME":
                    return "montenegroLow";
                case "MZ":
                    return "mozambiqueLow";
                case "MK":
                    return "northMacedoniaLow";
                case "MM":
                    return "myanmarLow";
                case "MP":
                    return "northernMarianaLow";
                case "MQ":
                    return "martiniqueLow";
                case "MS":
                    return "montserratLow";
                case "NA":
                    return "namibiaLow";
                case "NP":
                    return "nepalLow";
                case "NL":
                    return "netherlandsLow";
                case "NZ":
                    return "newZealandLow";
                case "NI":
                    return "nicaraguaLow";
                case "NE":
                    return "nigerLow";
                case "NG":
                    return "nigeriaLow";
                case "KP":
                    return "northKoreaLow";
                case "NO":
                    return "norwayLow";
                case "OM":
                    return "omanLow";
                case "PK":
                    return "pakistanLow";
                case "PS":
                    return "palestineLow";
                case "PA":
                    return "panamaLow";
                case "PE":
                    return "peruLow";
                case "PH":
                    return "philippinesLow";
                case "PL":
                    return "polandLow";
                case "PT":
                    return "portugalLow";
                case "PR":
                    return "puertoRicoLow";
                case "PY":
                    return "paraguayLow";
                case "QA":
                    return "qatarLow";
                case "RO":
                    return "romaniaLow";
                case "RU":
                    return "russiaLow";
                case "RW":
                    return "rwandaLow";
                case "SH":
                    return "saintHelenaLow";
                case "LC":
                    return "saintLuciaLow";
                case "VC":
                    return "saintVincentLow";
                case "WS":
                    return "samoaLow";
                case "SM":
                    return "sanMarinoLow";
                case "SS":
                    return "southSudanLow";
                case "ST":
                    return "saoTomePrincipeLow";
                case "SA":
                    return "saudiArabiaLow";
                case "SN":
                    return "senegalLow";
                case "RS":
                    return "serbiaLow";
                case "SC":
                    return "seychellesLow";
                case "SL":
                    return "sierraLeoneLow";
                case "SG":
                    return "singaporeLow";
                case "SK":
                    return "slovakiaLow";
                case "SI":
                    return "sloveniaLow";
                case "SB":
                    return "solomonIslandsLow";
                case "SO":
                    return "somaliaLow";
                case "ZA":
                    return "southAfricaLow";
                case "KR":
                    return "southKoreaLow";
                case "ES":
                    return "spainLow";
                case "LK":
                    return "sriLankaLow";
                case "LR":
                    return "liberiaLow";
                case "LS":
                    return "lesothoLow";
                case "KN":
                    return "stKittsNevisLow";
                case "PM":
                    return "stPierreMiquelonLow";
                case "SD":
                    return "sudanLow";
                case "SR":
                    return "surinameLow";
                case "SJ":
                    return "svalbardLow";
                case "SE":
                    return "swedenLow";
                case "CH":
                    return "switzerlandLow";
                case "SY":
                    return "syriaLow";
                case "TJ":
                    return "tajikistanLow";
                case "TL":
                    return "timorLesteLow";
                case "TZ":
                    return "tanzaniaLow";
                case "TH":
                    return "thailandLow";
                case "TG":
                    return "togoLow";
                case "TN":
                    return "tunisiaLow";
                case "TR":
                    return "turkeyLow";
                case "TM":
                    return "turkmenistanLow";
                case "TT":
                    return "trinidadTobagoLow";
                case "AE":
                    return "uaeLow";
                case "GB":
                    return "ukLow";
                case "UA":
                    return "ukraineLow";
                case "UG":
                    return "ugandaLow";
                case "US":
                    return "usaLow";
                case "UY":
                    return "uruguayLow";
                case "UZ":
                    return "uzbekistanLow";
                case "VA":
                    return "vaticanLow";
                case "VE":
                    return "venezuelaLow";
                case "VI":
                    return "usVirginIslandsLow";
                case "VN":
                    return "vietnamLow";
                case "YE":
                    return "yemenLow";
                case "ZM":
                    return "zambiaLow";
                case "ZW":
                    return "zimbabweLow";
                default:
                    return string.Empty;
            }
        }
    }
}
