@model ErgoNodeSpyder.Portal.Models.Geo.CountryViewModel
@{
    ViewData["Title"] = "Country: " + Model?.CountryCode;
}

<div id="kt_content_container" class="d-flex flex-column-fluid align-items-start container-xxl">
    <div class="content flex-row-fluid" id="kt_content">
        <div class="row gy-5 g-xl-10">
            <div class="col-md-8 col-xl-8 mb-md-5 mb-xxl-10">
                <div class="card overflow-hidden mb-5 mb-lg-10">
                    <div class="card-header card-header-stretch">
                        <h3 class="card-title">@Model?.CountryName</h3>
                        <div class="card-toolbar">
                            
                        </div>
                    </div>
                    <div class="card-body pt-5 ps-6">
                        <div id="country-map" class="w-100 h-350px"></div>
                    </div>
                </div>
            </div>
            <div class="col-md-4 col-xl-4 mb-md-5 mb-xxl-10">
                <div class="card overflow-hidden mb-5 mb-lg-10">
                    <div class="card-header card-header-stretch">
                        
                    </div>
                    <div class="card-body pt-5 ps-6">
                        
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts {

    <environment names="Development">
        <script src="https://cdn.amcharts.com/lib/5/index.js"></script>
        <script src="https://cdn.amcharts.com/lib/5/map.js"></script>
        @if (!string.IsNullOrEmpty(Model?.MapName))
        {
            <script src="https://cdn.amcharts.com/lib/5/geodata/@(Model.MapName).js"></script>
            <script src="https://cdn.amcharts.com/lib/5/geodata/json/@(Model.MapName).json"></script>
        }
        <script src="https://cdn.amcharts.com/lib/5/themes/Animated.js"></script>
        <script type="text/javascript" src="~/js/pages/country.js"></script>
    </environment>
    <environment names="Staging,Production">
        <script src="https://cdn.amcharts.com/lib/5/index.js"></script>
        <script src="https://cdn.amcharts.com/lib/5/map.js"></script>
        @if (!string.IsNullOrEmpty(Model?.MapName))
        {
            <script src="https://cdn.amcharts.com/lib/5/geodata/@(Model.MapName).js"></script>
            <script src="https://cdn.amcharts.com/lib/5/geodata/json/@(Model.MapName).json"></script>
        }
        <script src="https://cdn.amcharts.com/lib/5/themes/Animated.js"></script>
        <script type="text/javascript" src="~/js/pages/country.min.js"></script>
    </environment>

    <script>
        am5.ready(function() {

            var root = am5.Root.new('country-map');
            var colors = am5.ColorSet.new(root, {});

            root.setThemes([
                am5themes_Animated.new(root)
            ]);

            var chart = root.container.children.push(
                am5map.MapChart.new(root,
                    {
                        projection: am5map.geoMercator()
                    })
            );

            var polygonSeries = chart.series.push(
                am5map.MapPolygonSeries.new(root,
                    {
                        geoJSON: am5geodata_@(Model.MapName)
                    })
            );


            // Set clicking on "water" to zoom out
            chart.chartContainer
                .get('background')
                .events.on('click',
                    function() {
                        chart.goHome();
                    });

            // Make stuff animate on load
            chart.appear(1000, 100);
        });

        $.get('/api/nodes/geo/isplocations/@(Model.CountryCode)', function (data) {
            const length = data.data.length;

            if (length > 0) {
                    
                var pointSeries = chart.series.push(
                    am5map.MapPointSeries.new(root, {
                        
                    })
                );

                pointSeries.bullets.push(function() {
                    return am5.Bullet.new(root, {
                        sprite: am5.Circle.new(root, {
                            radius: 5,
                            fill: am5.color(0xff0000)
                        })
                    });
                });
            }
        });

            
        
    </script>
}